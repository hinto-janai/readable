[package]
name = "readable"
version = "0.15.0"
edition = "2021"
authors = ["hinto.janai <hinto.janai@protonmail.com>"]
description = "Human readable strings"
documentation = "https://docs.rs/readable"
repository = "https://github.com/hinto-janai/readable"
readme = "README.md"
keywords = ["human", "readable", "data", "formatting", "string"]
license = "MIT"
exclude = [
	"inlined",
	"fuzz",
	"CHANGELOG.md",
]
categories = ["value-formatting"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
# Everything relies on `str` and `toa`, so they're always enabled.
default = ["byte", "date", "num", "run", "time", "up"]
byte    = []
date    = ["dep:regex", "dep:once_cell", "dep:nichi", "dep:chrono"]
num     = ["dep:compact_str", "dep:seq-macro"]
run     = []
time    = []
toa     = []
up      = ["dep:target_os_lib"]

[dependencies]
paste = { version = "1.0.14" }

# (De)serialization
serde       = { version = "1.0.193", features = ["derive"], optional = true }
bincode     = { version = "2.0.0-rc.3", features = ["serde", "derive"], optional = true }
borsh       = { version = "1.3.0", features = ["derive"], optional = true }

# Num
compact_str = { version = "0.7.1", features = ["bytes", "serde"], optional = true }
seq-macro   = { version = "0.3.5", optional = true }

# Date
regex       = { version = "1.10.2", optional = true }
once_cell   = { version = "1.19.0", optional = true }
nichi       = { version = "0.5.1", optional = true }
chrono      = { version = "0.4.31", optional = true }

# Uptime
[target.'cfg(not(windows))'.dependencies]
target_os_lib = { package = "libc", version = "0.2.151", optional = true }
[target.'cfg(windows)'.dependencies]
target_os_lib = { package = "windows", version = "0.52.0", features = ["Win32_System_SystemInformation"], optional = true }
