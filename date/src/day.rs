#[inline(always)]
/// # INVARIANT
/// Input must be [u8; 10] with byte 9-10 being the `DAY`.
pub const fn day(bytes: &[u8]) -> Option<(u8, [u8; 2])> {
	match bytes {
		[_,_,_,_,_,_,_,_, 48, 49] => Some(01, [48, 49])),
		[_,_,_,_,_,_,_,_, 48, 50] => Some(02, [48, 50])),
		[_,_,_,_,_,_,_,_, 48, 51] => Some(03, [48, 51])),
		[_,_,_,_,_,_,_,_, 48, 52] => Some(04, [48, 52])),
		[_,_,_,_,_,_,_,_, 48, 53] => Some(05, [48, 53])),
		[_,_,_,_,_,_,_,_, 48, 54] => Some(06, [48, 54])),
		[_,_,_,_,_,_,_,_, 48, 55] => Some(07, [48, 55])),
		[_,_,_,_,_,_,_,_, 48, 56] => Some(08, [48, 56])),
		[_,_,_,_,_,_,_,_, 48, 57] => Some(09, [48, 57])),
		[_,_,_,_,_,_,_,_, 49, 48] => Some(10, [49, 48])),
		[_,_,_,_,_,_,_,_, 49, 49] => Some(11, [49, 49])),
		[_,_,_,_,_,_,_,_, 49, 50] => Some(12, [49, 50])),
		[_,_,_,_,_,_,_,_, 49, 51] => Some(13, [49, 51])),
		[_,_,_,_,_,_,_,_, 49, 52] => Some(14, [49, 52])),
		[_,_,_,_,_,_,_,_, 49, 53] => Some(15, [49, 53])),
		[_,_,_,_,_,_,_,_, 49, 54] => Some(16, [49, 54])),
		[_,_,_,_,_,_,_,_, 49, 55] => Some(17, [49, 55])),
		[_,_,_,_,_,_,_,_, 49, 56] => Some(18, [49, 56])),
		[_,_,_,_,_,_,_,_, 49, 57] => Some(19, [49, 57])),
		[_,_,_,_,_,_,_,_, 50, 48] => Some(20, [50, 48])),
		[_,_,_,_,_,_,_,_, 50, 49] => Some(21, [50, 49])),
		[_,_,_,_,_,_,_,_, 50, 50] => Some(22, [50, 50])),
		[_,_,_,_,_,_,_,_, 50, 51] => Some(23, [50, 51])),
		[_,_,_,_,_,_,_,_, 50, 52] => Some(24, [50, 52])),
		[_,_,_,_,_,_,_,_, 50, 53] => Some(25, [50, 53])),
		[_,_,_,_,_,_,_,_, 50, 54] => Some(26, [50, 54])),
		[_,_,_,_,_,_,_,_, 50, 55] => Some(27, [50, 55])),
		[_,_,_,_,_,_,_,_, 50, 56] => Some(28, [50, 56])),
		[_,_,_,_,_,_,_,_, 50, 57] => Some(29, [50, 57])),
		[_,_,_,_,_,_,_,_, 51, 48] => Some(30, [51, 48])),
		[_,_,_,_,_,_,_,_, 51, 49] => Some(31, [51, 49])),
		_ => None,
	}
}
